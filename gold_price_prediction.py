# -*- coding: utf-8 -*-
"""gold price prediction

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rH8u_7qse63G3xl_YT1GLu92h_2xlfqc
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

df = pd.read_csv('gld_price_data.csv')

df.head(8)

df.tail(9)

df.info()

df.shape

df.describe()

df.isnull().sum()

df.columns

df.duplicated().sum()

df = df.drop('Date',axis=1)

X = df.drop('GLD',axis=1)
y = df['GLD']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()

model.fit(X_train,y_train)

y_pred = model.predict(X_test)

print("R2 Score:", r2_score(y_test, y_pred))
print("MSE:", mean_squared_error(y_test, y_pred))

plt.figure(figsize=(10,5))
plt.plot(y_test.values, label="Actual")
plt.plot(y_pred, label="Predicted")
plt.legend()
plt.title("Gold Price Prediction vs Actual")
plt.show()

import gradio as gr

def predict_gold(spx, uso, slv, eurusd):
    input_data = np.array([[spx, uso, slv, eurusd]])
    prediction = model.predict(input_data)
    return round(prediction[0], 2)

interface = gr.Interface(fn=predict_gold,
                         inputs=["number", "number", "number", "number"],
                         outputs="number",
                         title="Gold Price Predictor",
                         description="Enter SPX, USO, SLV, EUR/USD to predict Gold Price.")

interface.launch()





























